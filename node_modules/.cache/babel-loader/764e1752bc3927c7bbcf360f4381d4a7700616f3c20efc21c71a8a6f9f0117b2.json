{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diogo\\\\Downloads\\\\Teste\\\\frontend-gerenciamento-produtos\\\\src\\\\components\\\\ProductForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importando React e useState\nimport axios from \"axios\"; // Importando axios para fazer requisições HTTP\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = ({\n  fetchProdutos\n}) => {\n  _s();\n  const [nome, setNome] = useState(\"\"); // Estado para armazenar o nome do produto\n  const [categoria, setCategoria] = useState(\"\"); // Estado para armazenar a categoria do produto\n  const [preco, setPreco] = useState(\"\"); // Estado para armazenar o preço do produto\n  const [quantidadeEmEstoque, setQuantidadeEmEstoque] = useState(\"\"); // Estado para armazenar a quantidade em estoque\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Previne o comportamento padrão do formulário\n    try {\n      // Envia os dados do novo produto para a API\n      const response = await axios.post(\"http://127.0.0.1:8000/api/produtos/\", {\n        nome,\n        categoria,\n        preco,\n        quantidade_em_estoque: quantidadeEmEstoque // Ajuste o nome para o que está na API\n      });\n      console.log(\"Produto adicionado:\", response.data); // Loga o produto adicionado\n\n      // Chama fetchProdutos para atualizar a lista de produtos\n      fetchProdutos();\n\n      // Limpa os campos após a adição\n      setNome(\"\");\n      setCategoria(\"\");\n      setPreco(\"\");\n      setQuantidadeEmEstoque(\"\");\n    } catch (error) {\n      console.error(\"Erro ao adicionar produto:\", error); // Loga o erro no console\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Adicionar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nome,\n        onChange: e => setNome(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Categoria:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: categoria,\n        onChange: e => setCategoria(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pre\\xE7o:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: preco,\n        onChange: e => setPreco(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantidade em Estoque:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantidadeEmEstoque,\n        onChange: e => setQuantidadeEmEstoque(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Cadastrar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductForm, \"ZHpwHIS0dUVfi77D25/M/hTny/E=\");\n_c = ProductForm;\nexport default ProductForm; // Exporta o componente\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProductForm","fetchProdutos","_s","nome","setNome","categoria","setCategoria","preco","setPreco","quantidadeEmEstoque","setQuantidadeEmEstoque","handleSubmit","e","preventDefault","response","post","quantidade_em_estoque","console","log","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/diogo/Downloads/Teste/frontend-gerenciamento-produtos/src/components/ProductForm.js"],"sourcesContent":["import React, { useState } from \"react\"; // Importando React e useState\r\nimport axios from \"axios\"; // Importando axios para fazer requisições HTTP\r\n\r\nconst ProductForm = ({ fetchProdutos }) => {\r\n    const [nome, setNome] = useState(\"\"); // Estado para armazenar o nome do produto\r\n    const [categoria, setCategoria] = useState(\"\"); // Estado para armazenar a categoria do produto\r\n    const [preco, setPreco] = useState(\"\"); // Estado para armazenar o preço do produto\r\n    const [quantidadeEmEstoque, setQuantidadeEmEstoque] = useState(\"\"); // Estado para armazenar a quantidade em estoque\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Previne o comportamento padrão do formulário\r\n        try {\r\n            // Envia os dados do novo produto para a API\r\n            const response = await axios.post(\r\n                \"http://127.0.0.1:8000/api/produtos/\",\r\n                {\r\n                    nome,\r\n                    categoria,\r\n                    preco,\r\n                    quantidade_em_estoque: quantidadeEmEstoque, // Ajuste o nome para o que está na API\r\n                }\r\n            );\r\n            console.log(\"Produto adicionado:\", response.data); // Loga o produto adicionado\r\n\r\n            // Chama fetchProdutos para atualizar a lista de produtos\r\n            fetchProdutos();\r\n\r\n            // Limpa os campos após a adição\r\n            setNome(\"\");\r\n            setCategoria(\"\");\r\n            setPreco(\"\");\r\n            setQuantidadeEmEstoque(\"\");\r\n        } catch (error) {\r\n            console.error(\"Erro ao adicionar produto:\", error); // Loga o erro no console\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Adicionar Produto</h2>\r\n            <div>\r\n                <label>Nome:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={nome}\r\n                    onChange={(e) => setNome(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Categoria:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={categoria}\r\n                    onChange={(e) => setCategoria(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Preço:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={preco}\r\n                    onChange={(e) => setPreco(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Quantidade em Estoque:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={quantidadeEmEstoque}\r\n                    onChange={(e) => setQuantidadeEmEstoque(e.target.value)}\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\">Cadastrar Produto</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProductForm; // Exporta o componente\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}